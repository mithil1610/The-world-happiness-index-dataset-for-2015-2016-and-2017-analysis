# -*- coding: utf-8 -*-
"""hive-mind_test.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Tz4s7uE7-s5lDdXnTDn1zOtQDTLMJePr
"""

import pandas as pd

"""First off all, download The world happiness index dataset for 2015, 2016 and 2017 and upload them to the Google Colab Runtime inside the following path **/content/**.
The download link of this three dataset is below:

Dataset of The world happiness index 2015: - https://drive.google.com/uc?id=19s8a96f19tAdD9lsr8aMnVSyZW-wI5SF&export=download

Dataset of The world happiness index 2016: - https://drive.google.com/uc?id=1n9p7lrYCpl_ZNYOJlHToRkbIo7Q-x8w2&export=download

Dataset of The world happiness index 2017: - https://drive.google.com/uc?id=1aUc5id0Pa177S0IvetrX5iBmqek6tSAk&export=download
"""

data_2015 = pd.read_csv('2015.csv')
data_2016 = pd.read_csv('2016.csv')
data_2017 = pd.read_csv('2017.csv')

"""# **Question 1:** Countries with a happiness score of less than 5.0"""

a = data_2015.loc[data_2015['Happiness Score'] < 5.0]['Country'].to_numpy().tolist()
b = data_2016.loc[data_2016['Happiness Score'] < 5.0]['Country'].to_numpy().tolist()
c = data_2017.loc[data_2017['Happiness.Score'] < 5.0]['Country'].to_numpy().tolist()
print(a, b, c, sep='\n')

d = a + b + c
d = set(d) #for getting unique country names
print("Countries with a happiness score of less than 5.0 are:")
print(d)

"""# **Answer 1:** Countries with a happiness score of less than 5.0 are **{'India', 'Ghana', 'Congo (Kinshasa)', 'Sri Lanka', 'Syria', 'Nigeria', 'Hungary', 'Burkina Faso', 'Iraq', 'Senegal', 'Iran', 'Mali', 'Bulgaria', 'Sierra Leone', 'Ivory Coast', 'South Sudan', 'Benin', 'Zimbabwe', 'Armenia', 'Central African Republic', 'Swaziland', 'Greece', 'Albania', 'Ethiopia', 'Dominican Republic', 'Honduras', 'Botswana', 'Comoros', 'Gabon', 'Lebanon', 'Tanzania', 'Nepal', 'Zambia', 'Namibia', 'Mauritania', 'Myanmar', 'Burundi', 'Laos', 'Tunisia', 'Bangladesh', 'Lesotho', 'Sudan', 'Egypt', 'Ukraine', 'Madagascar', 'Niger', 'Palestinian Territories', 'Angola', 'Afghanistan', 'Liberia', 'Cambodia', 'South Africa', 'Djibouti', 'Yemen', 'Tajikistan', 'Georgia', 'Chad', 'Rwanda', 'Togo', 'Kenya', 'Cameroon', 'Bosnia and Herzegovina', 'Congo (Brazzaville)', 'Uganda', 'Mozambique', 'Malawi', 'Mongolia', 'Guinea', 'Haiti'}**

# **Question 2:** Which is the unhappiest country in Sub-Saharan Africa?
"""

a = data_2015.loc[data_2015['Region'] == 'Sub-Saharan Africa']
a = a[['Country', 'Happiness Score']].reset_index(drop=True)
a = a[a['Happiness Score'] == a['Happiness Score'].min()].to_numpy().tolist()

b = data_2016.loc[data_2016['Region'] == 'Sub-Saharan Africa']
b = b[['Country', 'Happiness Score']].reset_index(drop=True)
b = b[b['Happiness Score'] == b['Happiness Score'].min()].to_numpy().tolist()

print(a, b, sep='\n')

if a[0][1] < b[0][1]:
  print('Unhappiest Country in Sub-Saharan Africa during year 2015 and 2016 is', a[0][0])
else:
  print('Unhappiest Country in Sub-Saharan Africa during year 2015 and 2016 is', b[0][0])

"""# **Answer 2:** Unhappiest Country in Sub-Saharan Africa during year 2015 and 2016 is **Togo**

# **Question 3:** Compare the Unhappiest and happiest countries in each region
"""

a = data_2015.loc[data_2015.groupby('Region')['Happiness Score'].idxmin()].reset_index(drop=True)
b = data_2015.loc[data_2015.groupby('Region')['Happiness Score'].idxmax()].reset_index(drop=True)
a['Happiest or Unhappiest'] = 'Unhappiest'
b['Happiest or Unhappiest'] = 'Happiest'

c = pd.concat([a, b], ignore_index=True).sort_values('Region').reset_index(drop=True)
c = c[['Country', 'Region', 'Happiest or Unhappiest', 'Happiness Rank', 'Happiness Score',
       'Standard Error', 'Economy (GDP per Capita)', 'Family',
       'Health (Life Expectancy)', 'Freedom', 'Trust (Government Corruption)',
       'Generosity', 'Dystopia Residual']]
print('Below is the dataframe which shows the comparison between Unhappiest and happiest countries in each region for the year 2015:-')
c

a = data_2016.loc[data_2016.groupby('Region')['Happiness Score'].idxmin()].reset_index(drop=True)
b = data_2016.loc[data_2016.groupby('Region')['Happiness Score'].idxmax()].reset_index(drop=True)
a['Happiest or Unhappiest'] = 'Unhappiest'
b['Happiest or Unhappiest'] = 'Happiest'

c = pd.concat([a, b], ignore_index=True).sort_values('Region').reset_index(drop=True)
c = c[['Country', 'Region', 'Happiest or Unhappiest', 'Happiness Rank', 'Happiness Score',
       'Lower Confidence Interval', 'Upper Confidence Interval',
       'Economy (GDP per Capita)', 'Family', 'Health (Life Expectancy)',
       'Freedom', 'Trust (Government Corruption)', 'Generosity',
       'Dystopia Residual']]
print('Below is the dataframe which shows the comparison between Unhappiest and happiest countries in each region for the year 2016:-')
c

"""# **Question 4:** Countries that became unhappy between 2015 to 2017"""

a = data_2015[['Country', 'Happiness Score']].reset_index(drop=True)
a.columns = ['Country', 'Happiness_Score_2015']
b = data_2016[['Country', 'Happiness Score']].reset_index(drop=True)
b.columns = ['Country', 'Happiness_Score_2016']
c = data_2017[['Country', 'Happiness.Score']].reset_index(drop=True)
c.columns = ['Country', 'Happiness_Score_2017']
d = a.merge(b, on='Country', how='inner')
d = d.merge(c, on='Country', how='inner')
print('Below is the dataframe containing the Happiness Score of different countries for the year 2015, 2016 and 2017:-')
d

Countries = []
for i in range(len(d)):
  if d['Happiness_Score_2015'][i] > d['Happiness_Score_2016'][i] or d['Happiness_Score_2016'][i] > d['Happiness_Score_2017'][i]:
    Countries.append(d['Country'][i])
Countries = set(Countries)
print(Countries)

"""# **Answer 4:** Countries that became unhappy between 2015 to 2017 are **{'Ghana', 'United Arab Emirates', 'Algeria', 'Nigeria', 'United Kingdom', 'Bhutan', 'Netherlands', 'Bulgaria', 'Libya', 'Zimbabwe', 'Austria', 'Tanzania', 'Jamaica', 'Costa Rica', 'Chile', 'United States', 'Croatia', 'Rwanda', 'Moldova', 'France', 'Azerbaijan', 'Slovenia', 'Norway', 'Guinea', 'Kazakhstan', 'India', 'Argentina', 'Uzbekistan', 'Japan', 'Vietnam', 'Albania', 'Cyprus', 'Belgium', 'Colombia', 'Zambia', 'South Korea', 'Indonesia', 'Mexico', 'Sudan', 'Uruguay', 'Montenegro', 'Mauritius', 'Bolivia', 'Pakistan', 'Brazil', 'Angola', 'Germany', 'Afghanistan', 'Paraguay', 'Georgia', 'Denmark', 'Italy', 'Uganda', 'Malawi', 'Haiti', 'Peru', 'Congo (Kinshasa)', 'Iraq', 'Iran', 'Thailand', 'Venezuela', 'Qatar', 'Mauritania', 'Tunisia', 'Belarus', 'Lithuania', 'Bahrain', 'Ireland', 'Australia', 'Panama', 'Yemen', 'Iceland', 'Israel', 'Singapore', 'Saudi Arabia', 'Ethiopia', 'Botswana', 'Kyrgyzstan', 'Sweden', 'Burundi', 'Bangladesh', 'Kosovo', 'Kuwait', 'Ukraine', 'Madagascar', 'Liberia', 'South Africa', 'Canada', 'New Zealand', 'Switzerland', 'Luxembourg', 'Kenya', 'El Salvador'}**

# **Question 5:** Find the country whose happiness decreased by the most amount
"""

a = data_2015[['Country', 'Happiness Score']].reset_index(drop=True)
a.columns = ['Country', 'Happiness_Score_2015']
b = data_2017[['Country', 'Happiness.Score']].reset_index(drop=True)
b.columns = ['Country', 'Happiness_Score_2017']
c = a.merge(b, on='Country', how='inner')
c['Difference'] = c['Happiness_Score_2015'] - c['Happiness_Score_2017']
print('Below is the dataframe containing the Happiness Score of different countries for the year 2015 and 2017:-')
c

print(c[c['Difference'] == c['Difference'].max()])
d = c[c['Difference'] == c['Difference'].max()]['Country'].tolist()[0]
print('\n')
print('The country whose happiness is decreased by the most amount is', d)

"""# **Answer 5:**The country whose happiness is decreased by the most amount is Venezuela.

# Task Complete -- END

# **UCF101** - Action Recognition Data Set

Below command will consume 7 GB internet approximately.
"""

!wget https://www.crcv.ucf.edu/data/UCF101/UCF101.rar

!unrar x "/content/UCF101.rar.1" "/content/UCF101_rar/"

"""<pre>Bring the training dataset in this format: 
(Labels can be downloaded
from <a href='https://www.crcv.ucf.edu/data/UCF101/UCF101TrainTestSplits-RecognitionTask.zip'>here</a>)
DATA_DIRECTORY (root folder)
|
|
|-- Label Name (label folder)
|       |
|       |--video1.mp4
|       |--video2.mp4
.    .
.    .
</pre>

# Data Directory (root folder) path: - **/content/UCF101_rar/UCF-101**

# ***Thank you***
"""